"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-lf#=9+l!0em%gk9f=^wf6lzmu7ib7fu-oc0h8h!94)j-rt@%k@'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition
"""
En plus de l'application polls que nous venons de créer, la création d'un projet Django 
entraîne automatiquement l'installation des app de contrib ci-dessous, qu'on va bientôt avoir
l'occasion d'utiliser.

Pour utiliser ces apps, on va avoir besoin de créer et d'utiliser une base de données. Pour la
création, on l'exécute via la commande `python manage.py migrate`. Cette commande va créer les 
tables nécessaires au bon fonctionnement des INSTALLED_APPS, en se basant sur les réglages de 
DATABASES.

Après avoir exécuté la commande migrate, je peux installer sqlite3 via `sudo apt install sqlite3`,
puis faire un `sqlite3 db.sqlite3` à la racine du projet, puis un `.tables` dans la commande sqlite3
pour voir les tables nouvellement créées.
"""
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mysite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mysite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

# Par défaut, les bases de données Django sont faites avec SQLite, et ça suffira pour le tuto
# À changer en cas de vraie utilisation en prod pour le SGBD adapté of course
# Liens pour changer le SGBD disponible dans le tuto: https://docs.djangoproject.com/en/4.1/intro/tutorial02/
# EN SQLite, les bases de données sont stockées dans un fichier, dont le nom est donné dans le paramètre NAME
# Avec d'autres SGBD, on peut devoir renseigner ci-dessous un USER, PASSWORD, HOST, etc
# Ici le fichier db.sqlite3 se situe à la racine du projet mysite/.
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

# TIME_ZONE à paramétrer selon le fuseau horaire de l'application (ici dans ce contexte Paris)
TIME_ZONE = 'Europe/Paris'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
